[{"/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/index.js":"1","/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/App.js":"2","/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/reportWebVitals.js":"3","/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/routes.js":"4","/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/screens/home/index.js":"5","/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/screens/auth/register/index.js":"6","/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/screens/auth/login/index.js":"7","/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/screens/notes/index/index.js":"8","/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/screens/users/edit/index.js":"9","/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/components/auth/private_route/index.js":"10","/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/components/header/index.js":"11","/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/components/header_logged/index.js":"12","/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/components/notes/index.js":"13","/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/components/auth/register_form/index.js":"14","/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/components/auth/login_form/index.js":"15","/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/services/notes.js":"16","/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/services/users.js":"17","/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/components/notes/list/index.js":"18","/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/components/notes/editor/index.js":"19","/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/services/api.js":"20","/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/components/notes/search/index.js":"21"},{"size":500,"mtime":1612311111927,"results":"22","hashOfConfig":"23"},{"size":254,"mtime":1612311111911,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1612311111927,"results":"25","hashOfConfig":"23"},{"size":876,"mtime":1612311111928,"results":"26","hashOfConfig":"23"},{"size":1660,"mtime":1612311111932,"results":"27","hashOfConfig":"23"},{"size":1704,"mtime":1612311111931,"results":"28","hashOfConfig":"23"},{"size":1686,"mtime":1612311111929,"results":"29","hashOfConfig":"23"},{"size":514,"mtime":1612311111935,"results":"30","hashOfConfig":"23"},{"size":1704,"mtime":1612390967619,"results":"31","hashOfConfig":"23"},{"size":349,"mtime":1612311111918,"results":"32","hashOfConfig":"23"},{"size":1634,"mtime":1612311111920,"results":"33","hashOfConfig":"23"},{"size":3375,"mtime":1612311111921,"results":"34","hashOfConfig":"23"},{"size":2999,"mtime":1612317541860,"results":"35","hashOfConfig":"23"},{"size":3695,"mtime":1612311111919,"results":"36","hashOfConfig":"23"},{"size":3177,"mtime":1612311111917,"results":"37","hashOfConfig":"23"},{"size":755,"mtime":1612317200312,"results":"38","hashOfConfig":"23"},{"size":1176,"mtime":1612390776832,"results":"39","hashOfConfig":"23"},{"size":2199,"mtime":1612311111926,"results":"40","hashOfConfig":"23"},{"size":1214,"mtime":1612315862930,"results":"41","hashOfConfig":"23"},{"size":109,"mtime":1612311111939,"results":"42","hashOfConfig":"23"},{"size":1287,"mtime":1612317727461,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1yzdq98",{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"46"},"/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/index.js",[],["99","100"],"/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/App.js",["101","102","103","104"],"import React, { Fragment } from 'react';\nimport \"./App.scss\";\nimport { Notification, Section } from 'rbx';\nimport HomeScreen from './screens/home'\nimport Routes from './routes'\n\nconst App = () => (\n  <div>\n    <Routes />\n  </div>\n)\n\n\n\nexport default App;","/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/reportWebVitals.js",[],"/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/routes.js",[],"/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/screens/home/index.js",["105"],"import React, { Fragment } from 'react'\nimport PresentationImage from '../../assets/images/presentation.png';\nimport Header from '../../components/header'\nimport { Column, Section, Title, Container } from \"rbx\";\nimport '../../styles/home.scss'\nimport {Link} from 'react-router-dom'\n\nfunction HomeScreen() {\n    return (\n        <Fragment>\n\n            <Header />\n\n            <Section size=\"medium\" className=\"home\">\n                <Container>\n                    <Column.Group>\n                        <Column size={5}>\n                            <Title size={2} spaced className=\"has-text-white\">\n                                Create notes easily and access when you wants on the cloud\n                            </Title>\n                            <Title size={5} spaced className=\"has-text-light\" subtitle>\n                                Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs.<br /><br />\n                                Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print.\n                            </Title>\n                            <Link to='/register' className=\"button is-outlined is-white is-large\">\n                                <strong>Register for free Now</strong>\n                            </Link>\n                        </Column>\n                        <Column size={6} offset={1}>\n                        <img src={PresentationImage} />\n                        </Column>\n                    </Column.Group>\n                </Container>\n            </Section>\n\n        </Fragment>\n\n    )\n}\n\nexport default HomeScreen ","/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/screens/auth/register/index.js",["106"],"import React, { Fragment } from 'react';\nimport Header from '../../../components/header'\nimport { Column, Section, Title, Container, Card } from \"rbx\";\nimport LogoImage from '../../../assets/images/logo.png';\nimport \"../../../styles/auth.scss\";\nimport RegisterForm from \"../../../components/auth/register_form\"\n\nconst RegisterScreen = () => (\n    <Fragment>\n        <Header />\n        <Section size=\"medium\" className=\"auth\">\n            <Container>\n                <Column.Group centered>\n                    <Column size={3}>\n                        <Card>\n                            <Card.Content>\n                                <Section>\n                                    <Column.Group centered>\n                                        <Column size={12}>\n                                            <img src={LogoImage} />\n                                        </Column>\n                                    </Column.Group>\n\n                                    <Column.Group>\n                                        <Column size={12}>\n                                            <Title size={6} className=\"has-text-grey has-text-centered\">\n                                                Your notes on the cloud\n                                            </Title>\n                                        </Column>\n                                    </Column.Group>\n                                    <RegisterForm/>\n                                </Section>\n\n                            </Card.Content>\n                        </Card>\n                    </Column>\n                </Column.Group>\n            </Container>\n        </Section>\n    </Fragment>\n);\n\nexport default RegisterScreen;","/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/screens/auth/login/index.js",["107"],"import React, { Fragment } from 'react'\nimport Header from \"../../../components/header\"\nimport { Column, Section, Title, Container, Card } from \"rbx\"\nimport LogoImage from '../../../assets/images/logo.png'\nimport \"../../../styles/auth.scss\"\nimport LoginForm from '../../../components/auth/login_form'\n\n\nconst LoginScreen = () => (\n    <Fragment>\n        <Header />\n        <Section size=\"medium\" className=\"auth\">\n            <Container>\n                <Column.Group centered>\n                    <Column size={3}>\n                        <Card>\n                            <Card.Content>\n                                <Section>\n                                    <Column.Group centered>\n                                        <Column size={12}>\n                                            <img src={LogoImage} />\n                                        </Column>\n                                    </Column.Group>\n\n                                    <Column.Group>\n                                        <Column size={12}>\n                                            <Title size={6} className=\"has-text-grey has-text-centered\">\n                                                Your notes on the cloud\n                                            </Title>\n                                        </Column>\n                                    </Column.Group>\n                                    <LoginForm/>\n                                </Section>\n\n\n                            </Card.Content>\n                        </Card>\n                    </Column>\n                </Column.Group>\n            </Container>\n        </Section>\n    </Fragment>\n)\n\nexport default LoginScreen;","/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/screens/notes/index/index.js",["108"],"import React, { Fragment, useState } from 'react';\nimport HeaderLogged from \"../../../components/header_logged/index\";\nimport { Column } from \"rbx\";\nimport \"../../../styles/notes.scss\";\n\nimport Notes from \"../../../components/notes/index\";\n\nfunction NotesScreen() {\n    const [isOpen, setIsOpen] = useState(false)\n\n    return (\n        <Fragment>\n            <HeaderLogged setIsOpen={setIsOpen} />\n            <Notes isOpen={isOpen} setIsOpen={setIsOpen} />\n        </Fragment>\n    )\n}\n\nexport default NotesScreen;","/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/screens/users/edit/index.js",["109"],"/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/components/auth/private_route/index.js",[],"/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/components/header/index.js",["110"],"import React from 'react'\nimport { Navbar, Container, Column } from 'rbx'\nimport logoImage from '../../assets/images/logo.png'\nimport '../../styles/header.scss'\nimport { Link } from 'react-router-dom'\n\nfunction Header() {\n    return (\n        <Navbar>\n            <Container>\n                <Navbar.Brand>\n                    <Link to=\"/\">\n                        <img src={logoImage} />\n                    </Link>\n                    <Navbar.Burger\n                        className=\"navbar-burger burger\"\n                        aria-label=\"menu\"\n                        aria-expanded=\"false\"\n                        data-target=\"navbar-menu\">\n                        <span aria-hidden=\"true\"></span>\n                        <span aria-hidden=\"true\"></span>\n                        <span aria-hidden=\"true\"></span>\n                    </Navbar.Burger>\n                </Navbar.Brand>\n\n                <Navbar.Menu id=\"navbar-menu\">\n                    <Navbar.Segment as=\"div\" className=\"navbar-item navbar-end\" align=\"right\">\n                        <Column.Group>\n                            <Column>\n                                <Link to=\"/register\" className=\"button is-white has-text-custom-purple\">Register</Link>\n                            </Column>\n                            <Column>\n                                <Link to=\"/login\" className=\"button is-outlined is-custom-purple\">Login</Link>\n                            </Column>\n                        </Column.Group>\n                    </Navbar.Segment>\n                </Navbar.Menu>\n            </Container>\n        </Navbar>\n\n    )\n}\n\nexport default Header","/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/components/header_logged/index.js",["111","112","113","114","115"],"import React, { Fragment, useState } from 'react';\nimport { Navbar, Container, Column, Button, Dropdown } from 'rbx';\nimport logoImage from '../../assets/images/logo-white.png';\nimport \"../../styles/header.scss\";\nimport UsersService from '../../services/users';\nimport { Redirect, Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faList } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction HeaderLogged(props) {\n    const [redirectToHome, setRedirectToHome] = useState(false);\n\n    const logOut = async () => {\n        await UsersService.logout();\n        setRedirectToHome(true);\n    }\n\n    if (redirectToHome == true)\n        return <Redirect to={{ pathname: \"/\" }} />\n\n    return (\n        <Navbar color=\"custom-purple\" className=\"navbar-logged\">\n            <Navbar.Brand>\n                <Column.Group>\n                    <Column size=\"11\" offset=\"1\">\n                        <Link to=\"/notes\">\n                            <img src={logoImage} />\n                        </Link>\n                    </Column>\n                </Column.Group>\n                <Navbar.Burger\n                    className=\"navbar-burger burger\"\n                    aria-label=\"menu\"\n                    aria-expanded=\"false\"\n                    data-target=\"navbar-menu\">\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                </Navbar.Burger>\n            </Navbar.Brand>\n\n            <Navbar.Menu>\n                <Navbar.Segment as=\"div\" className=\"navbar-item navbar-start\" align=\"start\">\n                    <Navbar.Item as=\"div\">\n                        <Button\n                            className=\"open-button\"\n                            color=\"white\"\n                            outlined\n                            onClick={() => props.setIsOpen(true)}>\n                            <FontAwesomeIcon icon={faList} />\n                        </Button>\n                    </Navbar.Item>\n                </Navbar.Segment>\n                <Navbar.Segment as=\"div\" className=\"navbar-item navbar-end\" align=\"right\">\n                    <Navbar.Item as=\"div\">\n                        <Dropdown>\n                            <Dropdown.Trigger>\n                                <Button className=\"button\" color=\"white\" outlined>\n                                    <span>Leonardo ▼</span>\n                                </Button>\n                            </Dropdown.Trigger>\n                            <Dropdown.Menu>\n                                <Dropdown.Content>\n                                    <Dropdown.Item as=\"div\">\n                                        <Link to=\"/users/edit\">User Edit</Link>\n                                    </Dropdown.Item>\n                                    <Dropdown.Divider />\n                                    <Dropdown.Item as=\"div\">\n                                        <a href=\"#\" onClick={e => logOut()}>LogOut</a>\n                                    </Dropdown.Item>\n                                </Dropdown.Content>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </Navbar.Item>\n                </Navbar.Segment>\n            </Navbar.Menu>\n        </Navbar>\n    )\n}\n\nexport default HeaderLogged","/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/components/notes/index.js",["116","117","118"],"import React, { Fragment, useEffect, useState } from 'react';\nimport { Column, Button } from \"rbx\";\nimport \"../../styles/notes.scss\"\nimport { push as Menu } from 'react-burger-menu'\nimport List from '../notes/list/index'\nimport Editor from \"../notes/editor\";\nimport NotesService from '../../services/notes'\nimport Search from \"../notes/search\";\n\n\nfunction Notes(props) {\n    const [notes, setNotes] = useState([]);\n    const [current_note, setCurrentNote] = useState({ title: \"\", body: \"\", id: \"\" });\n\n    useEffect(() => {\n        fetchNotes();\n    }, []);\n\n    async function fetchNotes() {\n        const response = await NotesService.index();\n        if (response.data.length >= 1) {\n            setNotes(response.data.reverse())\n            setCurrentNote(response.data[0])\n        } else {\n            setNotes([])\n        }\n    }\n    const createNote = async (params) => {\n        const note = await NotesService.create();\n        fetchNotes();\n    }\n    const deleteNote = async (note) => {\n        await NotesService.delete(note._id);\n        fetchNotes();\n    }\n\n    const updateNote = async (oldNote, params) => {\n        const updatedNote = await NotesService.update(oldNote._id, params)\n        const index = notes.indexOf(oldNote)\n        const newNotes = notes\n        newNotes[index] = updatedNote.data\n        setNotes(newNotes)\n        setCurrentNote(updatedNote.data)\n    }\n    const searchNote = async(query) => {\n        const response = await NotesService.search(query)\n        setNotes(response.data)\n    }\n\n    const selectNote = (id) => {\n        const note = notes.find((note) => {\n            return note._id == id;\n        })\n        setCurrentNote(note);\n    }\n\n    return (\n        <Fragment>\n            <div className=\"notes\" id=\"notes\">\n                <Menu\n                    pageWrapId={\"notes-editor\"}\n                    isOpen={props.isOpen}\n                    onStateChange={(state) => props.setIsOpen(state.isOpen)}\n                    disableAutoFocus\n                    outerContainerId={\"notes\"}\n                    customBurgerIcon={false}\n                    customCrossIcon={false}\n                >\n\n                    <Column.Group>\n                        <Column size={10} offset={1}>\n                            <Search searchNote={searchNote} fetchNotes={fetchNotes}/>\n                        </Column>\n                    </Column.Group>\n                    <List\n                        notes={notes}\n                        selectNote={selectNote}\n                        deleteNote={deleteNote}\n                        createNote={createNote}\n                        current_note={current_note} />\n                </Menu>\n\n\n                <Column size={12} className=\"notes-editor\" id=\"notes-editor\">\n                    <Editor\n                        note={current_note}\n                        updateNote={updateNote}\n                    />\n                </Column>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default Notes","/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/components/auth/register_form/index.js",["119","120","121","122"],"import React, { Fragment, useState } from 'react';\nimport { Button, Field, Control, Input, Column, Section, Help, Label } from \"rbx\";\nimport { Redirect } from \"react-router-dom\";\nimport UserService from '../../../services/users'\n\n\nfunction RegisterForm() {\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [redirectToLogin, setRedirectToLogin] = useState(false);\n    const [error, setError] = useState(false);\n\n    const handleSubmit = async (evt) => {\n        evt.preventDefault();\n\n        try {\n            const user = await UserService.register({ name: name, email: email, password: password });\n            setRedirectToLogin(true);\n        } catch (error) {\n            setError(true)\n        }\n    }\n\n    if(redirectToLogin == true)\n    return <Redirect to={{pathname: \"/login\"}}/>\n\n\n    return (\n        <Fragment>\n            <Column.Group centered>\n                <form onSubmit={handleSubmit} >\n                    <Column size={12}>\n                        <Field>\n                            <Label size=\"small\">Name:</Label>\n                            <Control>\n                                <Input\n                                    type=\"name\"\n                                    required\n                                    name=\"name\"\n                                    value={name}\n                                    onChange={e => setName(e.target.value)}\n                                />\n                            </Control>\n                        </Field>\n                        <Field>\n                            <Label size=\"small\">Email:</Label>\n                            <Control>\n                                <Input\n                                    type=\"email\"\n                                    required\n                                    name=\"email\"\n                                    value={email}\n                                    onChange={e => setEmail(e.target.value)}\n                                />\n                            </Control>\n                        </Field>\n                        <Field>\n                            <Label size=\"small\">Password:</Label>\n                            <Control>\n                                <Input\n                                    type=\"password\"\n                                    required\n                                    name=\"password\"\n                                    value={password}\n                                    onChange={e => setPassword(e.target.value)}\n                                />\n                            </Control>\n                        </Field>\n                        <Field>\n                            <Control>\n                                <Column.Group breakpoint=\"mobile\">\n                                    <Column>\n                                        <a className=\"button is-white has-text-custom-purple\"\n                                        onClick={e => setRedirectToLogin(true)}\n                                        >Login or</a>\n                                    </Column>\n                                    <Column>\n                                        <Button color=\"custom-purple\" outlined>Register</Button>\n                                    </Column>\n                                </Column.Group>\n                            </Control>\n                        </Field>\n                        { error && <Help color=\"danger\">Email or Password invalid</Help> }\n                    </Column>\n                </form>\n            </Column.Group>\n        </Fragment>\n    )\n}\n\nexport default RegisterForm;","/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/components/auth/login_form/index.js",["123","124","125","126","127"],"import React, { Fragment, useState } from 'react'\nimport { Button, Field, Control, Input, Column, Section, Help, Label } from \"rbx\"\nimport { Redirect } from \"react-router-dom\"\nimport UserService from '../../../services/users'\n\nfunction LoginForm() {\n\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [RedirectToRegister, setRedirectToRegister] = useState(false)\n    const [RedirectToNotes, setRedirectToNotes] = useState(false)\n    const [Error, setError] = useState(false)\n\n    const handleSubmit = async (evt) => {\n        evt.preventDefault();\n\n        try {\n            const user = await UserService.login({email: email, password: password });\n            setRedirectToNotes(true);\n        } catch (error) {\n            setError(true)\n        }\n    }\n\n    if (RedirectToRegister == true)\n        return <Redirect to={{ pathname: \"/register\" }} />\n    else if (RedirectToNotes == true)\n        return <Redirect to={{ pathname: \"/notes\" }} />\n\n    return (\n        <Fragment>\n            <Column.Group centered>\n                <form onSubmit={handleSubmit}>\n                    <Column size={12}>\n                        <Field>\n                            <Label size=\"small\">Email:</Label>\n                            <Control>\n                                <Input\n                                    type=\"email\"\n                                    value={email}\n                                    onChange={e => setEmail(e.target.value)}\n                                    required\n                                    name=\"email\"\n                                />\n                            </Control>\n                        </Field>\n                        <Field>\n                            <Label size=\"small\">Password:</Label>\n                            <Control>\n                                <Input\n                                    type=\"password\"\n                                    value={password}\n                                    onChange={e => setPassword(e.target.value)}\n                                    required\n                                    name=\"password\"\n                                />\n                            </Control>\n                        </Field>\n                        <Field>\n                            <Control>\n                                <Column.Group breakpoint=\"mobile\">\n                                    <Column>\n                                        <a onClick={e => setRedirectToRegister(true)} className=\"button is-white has-text-custom-purple\">Register or</a>\n                                    </Column>\n                                    <Column>\n                                        <Button color=\"custom-purple\" outlined>Login</Button>\n                                    </Column>\n                                </Column.Group>\n                            </Control>\n                        </Field>\n                        {Error && <Help color=\"danger\">Email or Password invalid</Help>}\n                    </Column>\n                </form>\n            </Column.Group>\n        </Fragment>\n    )\n}\n\nexport default LoginForm","/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/services/notes.js",[],"/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/services/users.js",[],"/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/components/notes/list/index.js",["128"],"import React, { Fragment } from 'react';\nimport { Button, Column, Tag, Title, List } from \"rbx\";\nimport Moment from 'moment';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction ListNotes(props) {\n    return (\n        <Fragment>\n            <Column.Group breakpoint=\"mobile\">\n                <Column size={6} offset={1}>\n                    <Title size={6}>\n                        {props.notes.length} Notes\n                    </Title>\n                </Column>\n                <Column size={2}>\n                    <Button state=\"active\" color=\"custom-purple\" outlined size=\"small\" onClick={() => props.createNote()}>\n                        Notes +\n                    </Button>\n                </Column>\n            </Column.Group>\n            <List className=\"notes-list\">\n                {props.notes.map((item, key) =>\n                    <List.Item key={key} onClick={() => props.selectNote(item._id)} active={item == props.current_note}>\n                        <Title size={6}>\n                            {item.title.replace(/(<([^>]+)>)/ig, \"\").substring(0, 15)}\n                        </Title>\n                        <Title size={6} subtitle spaced={false}>\n                            {item.body.replace(/(<([^>]+)>)/ig, \"\").substring(0, 30)}\n                        </Title>\n\n\n                        <Column.Group breakpoint=\"mobile\">\n                            <Column size={10}>\n                                <Tag color=\"dark\">\n                                    {Moment(item.created_at).format('DD/MM')}\n                                </Tag>\n                            </Column>\n                            <Column size={2}>\n                                <FontAwesomeIcon\n                                    icon={faTrash}\n                                    onClick={() => props.deleteNote(item)}\n                                    color=\"grey\"\n                                />\n                            </Column>\n                        </Column.Group>\n                    </List.Item>\n                )}\n            </List>\n        </Fragment>\n    )\n}\n\nexport default ListNotes","/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/components/notes/editor/index.js",[],"/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/services/api.js",[],"/media/mith/Novo volume/Linux-arquivos/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/javascript_note/src/components/notes/search/index.js",["129","130","131"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { Input, Column } from \"rbx\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nfunction Search(props) {\n    const [query, setQuery] = useState(\"\")\n\n    const handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            props.searchNote(query)\n        }\n    }\n\n    return (\n        <Column.Group className=\"is-vcentered\" breakpoint=\"mobile\">\n            <Column size=\"9\" offset={1}>\n                <Input type=\"text\"\n                    name={query}\n                    value={query}\n                    placeholder=\"Search note...\"\n                    onChange={(e) => setQuery(e.target.value)}\n                    onKeyDown={handleKeyDown} />\n            </Column>\n            <Column mobile={2} size={1}>\n                <a href=\"#\" onClick={() => {\n                    props.fetchNotes()\n                    setQuery('')\n                }}>\n                    <FontAwesomeIcon\n                        icon={faTimes}\n                        color=\"grey\"\n                        className=\"is-pulled-left  \"\n                    />\n                </a>\n            </Column>\n        </Column.Group>\n\n    )\n}\n\nexport default Search",{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":25},{"ruleId":"136","severity":1,"message":"140","line":3,"column":10,"nodeType":"138","messageId":"139","endLine":3,"endColumn":22},{"ruleId":"136","severity":1,"message":"141","line":3,"column":24,"nodeType":"138","messageId":"139","endLine":3,"endColumn":31},{"ruleId":"136","severity":1,"message":"142","line":4,"column":8,"nodeType":"138","messageId":"139","endLine":4,"endColumn":18},{"ruleId":"143","severity":1,"message":"144","line":30,"column":25,"nodeType":"145","endLine":30,"endColumn":56},{"ruleId":"143","severity":1,"message":"144","line":20,"column":45,"nodeType":"145","endLine":20,"endColumn":68},{"ruleId":"143","severity":1,"message":"144","line":21,"column":45,"nodeType":"145","endLine":21,"endColumn":68},{"ruleId":"136","severity":1,"message":"146","line":3,"column":10,"nodeType":"138","messageId":"139","endLine":3,"endColumn":16},{"ruleId":"136","severity":1,"message":"147","line":2,"column":51,"nodeType":"138","messageId":"139","endLine":2,"endColumn":57},{"ruleId":"143","severity":1,"message":"144","line":13,"column":25,"nodeType":"145","endLine":13,"endColumn":48},{"ruleId":"136","severity":1,"message":"137","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":25},{"ruleId":"136","severity":1,"message":"148","line":2,"column":18,"nodeType":"138","messageId":"139","endLine":2,"endColumn":27},{"ruleId":"149","severity":1,"message":"150","line":19,"column":24,"nodeType":"151","messageId":"152","endLine":19,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":28,"column":29,"nodeType":"145","endLine":28,"endColumn":52},{"ruleId":"153","severity":1,"message":"154","line":70,"column":41,"nodeType":"145","endLine":70,"endColumn":77},{"ruleId":"136","severity":1,"message":"147","line":2,"column":18,"nodeType":"138","messageId":"139","endLine":2,"endColumn":24},{"ruleId":"136","severity":1,"message":"155","line":29,"column":15,"nodeType":"138","messageId":"139","endLine":29,"endColumn":19},{"ruleId":"149","severity":1,"message":"150","line":52,"column":29,"nodeType":"151","messageId":"152","endLine":52,"endColumn":31},{"ruleId":"136","severity":1,"message":"141","line":2,"column":49,"nodeType":"138","messageId":"139","endLine":2,"endColumn":56},{"ruleId":"136","severity":1,"message":"156","line":18,"column":19,"nodeType":"138","messageId":"139","endLine":18,"endColumn":23},{"ruleId":"149","severity":1,"message":"150","line":25,"column":24,"nodeType":"151","messageId":"152","endLine":25,"endColumn":26},{"ruleId":"153","severity":1,"message":"157","line":74,"column":41,"nodeType":"145","endLine":76,"endColumn":42},{"ruleId":"136","severity":1,"message":"141","line":2,"column":49,"nodeType":"138","messageId":"139","endLine":2,"endColumn":56},{"ruleId":"136","severity":1,"message":"156","line":18,"column":19,"nodeType":"138","messageId":"139","endLine":18,"endColumn":23},{"ruleId":"149","severity":1,"message":"150","line":25,"column":28,"nodeType":"151","messageId":"152","endLine":25,"endColumn":30},{"ruleId":"149","severity":1,"message":"150","line":27,"column":30,"nodeType":"151","messageId":"152","endLine":27,"endColumn":32},{"ruleId":"153","severity":1,"message":"157","line":63,"column":41,"nodeType":"145","endLine":63,"endColumn":138},{"ruleId":"149","severity":1,"message":"150","line":25,"column":98,"nodeType":"151","messageId":"152","endLine":25,"endColumn":100},{"ruleId":"136","severity":1,"message":"137","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":25},{"ruleId":"136","severity":1,"message":"158","line":1,"column":37,"nodeType":"138","messageId":"139","endLine":1,"endColumn":46},{"ruleId":"153","severity":1,"message":"154","line":26,"column":17,"nodeType":"145","endLine":29,"endColumn":20},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'Notification' is defined but never used.","'Section' is defined but never used.","'HomeScreen' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Column' is defined but never used.","'Button' is defined but never used.","'Container' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'note' is assigned a value but never used.","'user' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]