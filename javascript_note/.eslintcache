[{"/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/index.js":"1","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/App.js":"2","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/reportWebVitals.js":"3","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/components/header/index.js":"4","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/screens/home/index.js":"5","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/routes.js":"6","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/screens/auth/register/index.js":"7","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/screens/auth/login/index.js":"8","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/screens/notes/index/index.js":"9","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/screens/users/edit/index.js":"10","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/components/auth/register_form/index.js":"11","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/services/users.js":"12","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/services/api.js":"13","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/components/auth/login_form/index.js":"14","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/components/auth/private_route/index.js":"15","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/components/header_logged/index.js":"16","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/components/notes/index.js":"17"},{"size":500,"mtime":1608336881751,"results":"18","hashOfConfig":"19"},{"size":254,"mtime":1608414575543,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1608336881751,"results":"21","hashOfConfig":"19"},{"size":1634,"mtime":1608424772001,"results":"22","hashOfConfig":"19"},{"size":1660,"mtime":1608417505560,"results":"23","hashOfConfig":"19"},{"size":876,"mtime":1611785407287,"results":"24","hashOfConfig":"19"},{"size":1704,"mtime":1608428444331,"results":"25","hashOfConfig":"19"},{"size":1686,"mtime":1611780616376,"results":"26","hashOfConfig":"19"},{"size":514,"mtime":1611870758226,"results":"27","hashOfConfig":"19"},{"size":158,"mtime":1608416769021,"results":"28","hashOfConfig":"19"},{"size":3695,"mtime":1608432059521,"results":"29","hashOfConfig":"19"},{"size":493,"mtime":1611864424088,"results":"30","hashOfConfig":"19"},{"size":109,"mtime":1608430852327,"results":"31","hashOfConfig":"19"},{"size":3177,"mtime":1611781832616,"results":"32","hashOfConfig":"19"},{"size":349,"mtime":1611785763387,"results":"33","hashOfConfig":"19"},{"size":3375,"mtime":1611870322723,"results":"34","hashOfConfig":"19"},{"size":1131,"mtime":1611871734144,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"16fmyri",{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"38"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/index.js",[],["79","80"],"/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/App.js",["81","82","83","84"],"import React, { Fragment } from 'react';\nimport \"./App.scss\";\nimport { Notification, Section } from 'rbx';\nimport HomeScreen from './screens/home'\nimport Routes from './routes'\n\nconst App = () => (\n  <div>\n    <Routes />\n  </div>\n)\n\n\n\nexport default App;","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/reportWebVitals.js",[],"/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/components/header/index.js",["85"],"import React from 'react'\nimport { Navbar, Container, Column } from 'rbx'\nimport logoImage from '../../assets/images/logo.png'\nimport '../../styles/header.scss'\nimport { Link } from 'react-router-dom'\n\nfunction Header() {\n    return (\n        <Navbar>\n            <Container>\n                <Navbar.Brand>\n                    <Link to=\"/\">\n                        <img src={logoImage} />\n                    </Link>\n                    <Navbar.Burger\n                        className=\"navbar-burger burger\"\n                        aria-label=\"menu\"\n                        aria-expanded=\"false\"\n                        data-target=\"navbar-menu\">\n                        <span aria-hidden=\"true\"></span>\n                        <span aria-hidden=\"true\"></span>\n                        <span aria-hidden=\"true\"></span>\n                    </Navbar.Burger>\n                </Navbar.Brand>\n\n                <Navbar.Menu id=\"navbar-menu\">\n                    <Navbar.Segment as=\"div\" className=\"navbar-item navbar-end\" align=\"right\">\n                        <Column.Group>\n                            <Column>\n                                <Link to=\"/register\" className=\"button is-white has-text-custom-purple\">Register</Link>\n                            </Column>\n                            <Column>\n                                <Link to=\"/login\" className=\"button is-outlined is-custom-purple\">Login</Link>\n                            </Column>\n                        </Column.Group>\n                    </Navbar.Segment>\n                </Navbar.Menu>\n            </Container>\n        </Navbar>\n\n    )\n}\n\nexport default Header","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/screens/home/index.js",["86"],"import React, { Fragment } from 'react'\nimport PresentationImage from '../../assets/images/presentation.png';\nimport Header from '../../components/header'\nimport { Column, Section, Title, Container } from \"rbx\";\nimport '../../styles/home.scss'\nimport {Link} from 'react-router-dom'\n\nfunction HomeScreen() {\n    return (\n        <Fragment>\n\n            <Header />\n\n            <Section size=\"medium\" className=\"home\">\n                <Container>\n                    <Column.Group>\n                        <Column size={5}>\n                            <Title size={2} spaced className=\"has-text-white\">\n                                Create notes easily and access when you wants on the cloud\n                            </Title>\n                            <Title size={5} spaced className=\"has-text-light\" subtitle>\n                                Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs.<br /><br />\n                                Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print.\n                            </Title>\n                            <Link to='/register' className=\"button is-outlined is-white is-large\">\n                                <strong>Register for free Now</strong>\n                            </Link>\n                        </Column>\n                        <Column size={6} offset={1}>\n                        <img src={PresentationImage} />\n                        </Column>\n                    </Column.Group>\n                </Container>\n            </Section>\n\n        </Fragment>\n\n    )\n}\n\nexport default HomeScreen ","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/routes.js",[],"/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/screens/auth/register/index.js",["87"],"import React, { Fragment } from 'react';\nimport Header from '../../../components/header'\nimport { Column, Section, Title, Container, Card } from \"rbx\";\nimport LogoImage from '../../../assets/images/logo.png';\nimport \"../../../styles/auth.scss\";\nimport RegisterForm from \"../../../components/auth/register_form\"\n\nconst RegisterScreen = () => (\n    <Fragment>\n        <Header />\n        <Section size=\"medium\" className=\"auth\">\n            <Container>\n                <Column.Group centered>\n                    <Column size={3}>\n                        <Card>\n                            <Card.Content>\n                                <Section>\n                                    <Column.Group centered>\n                                        <Column size={12}>\n                                            <img src={LogoImage} />\n                                        </Column>\n                                    </Column.Group>\n\n                                    <Column.Group>\n                                        <Column size={12}>\n                                            <Title size={6} className=\"has-text-grey has-text-centered\">\n                                                Your notes on the cloud\n                                            </Title>\n                                        </Column>\n                                    </Column.Group>\n                                    <RegisterForm/>\n                                </Section>\n\n                            </Card.Content>\n                        </Card>\n                    </Column>\n                </Column.Group>\n            </Container>\n        </Section>\n    </Fragment>\n);\n\nexport default RegisterScreen;","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/screens/auth/login/index.js",["88"],"import React, { Fragment } from 'react'\nimport Header from \"../../../components/header\"\nimport { Column, Section, Title, Container, Card } from \"rbx\"\nimport LogoImage from '../../../assets/images/logo.png'\nimport \"../../../styles/auth.scss\"\nimport LoginForm from '../../../components/auth/login_form'\n\n\nconst LoginScreen = () => (\n    <Fragment>\n        <Header />\n        <Section size=\"medium\" className=\"auth\">\n            <Container>\n                <Column.Group centered>\n                    <Column size={3}>\n                        <Card>\n                            <Card.Content>\n                                <Section>\n                                    <Column.Group centered>\n                                        <Column size={12}>\n                                            <img src={LogoImage} />\n                                        </Column>\n                                    </Column.Group>\n\n                                    <Column.Group>\n                                        <Column size={12}>\n                                            <Title size={6} className=\"has-text-grey has-text-centered\">\n                                                Your notes on the cloud\n                                            </Title>\n                                        </Column>\n                                    </Column.Group>\n                                    <LoginForm/>\n                                </Section>\n\n\n                            </Card.Content>\n                        </Card>\n                    </Column>\n                </Column.Group>\n            </Container>\n        </Section>\n    </Fragment>\n)\n\nexport default LoginScreen;","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/screens/notes/index/index.js",["89"],"/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/screens/users/edit/index.js",[],"/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/components/auth/register_form/index.js",["90","91","92","93"],"import React, { Fragment, useState } from 'react';\nimport { Button, Field, Control, Input, Column, Section, Help, Label } from \"rbx\";\nimport { Redirect } from \"react-router-dom\";\nimport UserService from '../../../services/users'\n\n\nfunction RegisterForm() {\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [redirectToLogin, setRedirectToLogin] = useState(false);\n    const [error, setError] = useState(false);\n\n    const handleSubmit = async (evt) => {\n        evt.preventDefault();\n\n        try {\n            const user = await UserService.register({ name: name, email: email, password: password });\n            setRedirectToLogin(true);\n        } catch (error) {\n            setError(true)\n        }\n    }\n\n    if(redirectToLogin == true)\n    return <Redirect to={{pathname: \"/login\"}}/>\n\n\n    return (\n        <Fragment>\n            <Column.Group centered>\n                <form onSubmit={handleSubmit} >\n                    <Column size={12}>\n                        <Field>\n                            <Label size=\"small\">Name:</Label>\n                            <Control>\n                                <Input\n                                    type=\"name\"\n                                    required\n                                    name=\"name\"\n                                    value={name}\n                                    onChange={e => setName(e.target.value)}\n                                />\n                            </Control>\n                        </Field>\n                        <Field>\n                            <Label size=\"small\">Email:</Label>\n                            <Control>\n                                <Input\n                                    type=\"email\"\n                                    required\n                                    name=\"email\"\n                                    value={email}\n                                    onChange={e => setEmail(e.target.value)}\n                                />\n                            </Control>\n                        </Field>\n                        <Field>\n                            <Label size=\"small\">Password:</Label>\n                            <Control>\n                                <Input\n                                    type=\"password\"\n                                    required\n                                    name=\"password\"\n                                    value={password}\n                                    onChange={e => setPassword(e.target.value)}\n                                />\n                            </Control>\n                        </Field>\n                        <Field>\n                            <Control>\n                                <Column.Group breakpoint=\"mobile\">\n                                    <Column>\n                                        <a className=\"button is-white has-text-custom-purple\"\n                                        onClick={e => setRedirectToLogin(true)}\n                                        >Login or</a>\n                                    </Column>\n                                    <Column>\n                                        <Button color=\"custom-purple\" outlined>Register</Button>\n                                    </Column>\n                                </Column.Group>\n                            </Control>\n                        </Field>\n                        { error && <Help color=\"danger\">Email or Password invalid</Help> }\n                    </Column>\n                </form>\n            </Column.Group>\n        </Fragment>\n    )\n}\n\nexport default RegisterForm;","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/services/users.js",[],"/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/services/api.js",[],"/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/components/auth/login_form/index.js",["94","95","96","97","98"],"import React, { Fragment, useState } from 'react'\nimport { Button, Field, Control, Input, Column, Section, Help, Label } from \"rbx\"\nimport { Redirect } from \"react-router-dom\"\nimport UserService from '../../../services/users'\n\nfunction LoginForm() {\n\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [RedirectToRegister, setRedirectToRegister] = useState(false)\n    const [RedirectToNotes, setRedirectToNotes] = useState(false)\n    const [Error, setError] = useState(false)\n\n    const handleSubmit = async (evt) => {\n        evt.preventDefault();\n\n        try {\n            const user = await UserService.login({email: email, password: password });\n            setRedirectToNotes(true);\n        } catch (error) {\n            setError(true)\n        }\n    }\n\n    if (RedirectToRegister == true)\n        return <Redirect to={{ pathname: \"/register\" }} />\n    else if (RedirectToNotes == true)\n        return <Redirect to={{ pathname: \"/notes\" }} />\n\n    return (\n        <Fragment>\n            <Column.Group centered>\n                <form onSubmit={handleSubmit}>\n                    <Column size={12}>\n                        <Field>\n                            <Label size=\"small\">Email:</Label>\n                            <Control>\n                                <Input\n                                    type=\"email\"\n                                    value={email}\n                                    onChange={e => setEmail(e.target.value)}\n                                    required\n                                    name=\"email\"\n                                />\n                            </Control>\n                        </Field>\n                        <Field>\n                            <Label size=\"small\">Password:</Label>\n                            <Control>\n                                <Input\n                                    type=\"password\"\n                                    value={password}\n                                    onChange={e => setPassword(e.target.value)}\n                                    required\n                                    name=\"password\"\n                                />\n                            </Control>\n                        </Field>\n                        <Field>\n                            <Control>\n                                <Column.Group breakpoint=\"mobile\">\n                                    <Column>\n                                        <a onClick={e => setRedirectToRegister(true)} className=\"button is-white has-text-custom-purple\">Register or</a>\n                                    </Column>\n                                    <Column>\n                                        <Button color=\"custom-purple\" outlined>Login</Button>\n                                    </Column>\n                                </Column.Group>\n                            </Control>\n                        </Field>\n                        {Error && <Help color=\"danger\">Email or Password invalid</Help>}\n                    </Column>\n                </form>\n            </Column.Group>\n        </Fragment>\n    )\n}\n\nexport default LoginForm","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/components/auth/private_route/index.js",[],"/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/components/header_logged/index.js",["99","100","101","102","103"],"import React, { Fragment, useState } from 'react';\nimport { Navbar, Container, Column, Button, Dropdown } from 'rbx';\nimport logoImage from '../../assets/images/logo-white.png';\nimport \"../../styles/header.scss\";\nimport UsersService from '../../services/users';\nimport { Redirect, Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faList } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction HeaderLogged(props) {\n    const [redirectToHome, setRedirectToHome] = useState(false);\n\n    const logOut = async () => {\n        await UsersService.logout();\n        setRedirectToHome(true);\n    }\n\n    if (redirectToHome == true)\n        return <Redirect to={{ pathname: \"/\" }} />\n\n    return (\n        <Navbar color=\"custom-purple\" className=\"navbar-logged\">\n            <Navbar.Brand>\n                <Column.Group>\n                    <Column size=\"11\" offset=\"1\">\n                        <Link to=\"/notes\">\n                            <img src={logoImage} />\n                        </Link>\n                    </Column>\n                </Column.Group>\n                <Navbar.Burger\n                    className=\"navbar-burger burger\"\n                    aria-label=\"menu\"\n                    aria-expanded=\"false\"\n                    data-target=\"navbar-menu\">\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                </Navbar.Burger>\n            </Navbar.Brand>\n\n            <Navbar.Menu>\n                <Navbar.Segment as=\"div\" className=\"navbar-item navbar-start\" align=\"start\">\n                    <Navbar.Item as=\"div\">\n                        <Button\n                            className=\"open-button\"\n                            color=\"white\"\n                            outlined\n                            onClick={() => props.setIsOpen(true)}>\n                            <FontAwesomeIcon icon={faList} />\n                        </Button>\n                    </Navbar.Item>\n                </Navbar.Segment>\n                <Navbar.Segment as=\"div\" className=\"navbar-item navbar-end\" align=\"right\">\n                    <Navbar.Item as=\"div\">\n                        <Dropdown>\n                            <Dropdown.Trigger>\n                                <Button className=\"button\" color=\"white\" outlined>\n                                    <span>Leonardo ▼</span>\n                                </Button>\n                            </Dropdown.Trigger>\n                            <Dropdown.Menu>\n                                <Dropdown.Content>\n                                    <Dropdown.Item as=\"div\">\n                                        <Link to=\"/users/edit\">User Edit</Link>\n                                    </Dropdown.Item>\n                                    <Dropdown.Divider />\n                                    <Dropdown.Item as=\"div\">\n                                        <a href=\"#\" onClick={e => logOut()}>LogOut</a>\n                                    </Dropdown.Item>\n                                </Dropdown.Content>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </Navbar.Item>\n                </Navbar.Segment>\n            </Navbar.Menu>\n        </Navbar>\n    )\n}\n\nexport default HeaderLogged","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/components/notes/index.js",["104","105","106"],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},{"ruleId":"111","severity":1,"message":"115","line":3,"column":10,"nodeType":"113","messageId":"114","endLine":3,"endColumn":22},{"ruleId":"111","severity":1,"message":"116","line":3,"column":24,"nodeType":"113","messageId":"114","endLine":3,"endColumn":31},{"ruleId":"111","severity":1,"message":"117","line":4,"column":8,"nodeType":"113","messageId":"114","endLine":4,"endColumn":18},{"ruleId":"118","severity":1,"message":"119","line":13,"column":25,"nodeType":"120","endLine":13,"endColumn":48},{"ruleId":"118","severity":1,"message":"119","line":30,"column":25,"nodeType":"120","endLine":30,"endColumn":56},{"ruleId":"118","severity":1,"message":"119","line":20,"column":45,"nodeType":"120","endLine":20,"endColumn":68},{"ruleId":"118","severity":1,"message":"119","line":21,"column":45,"nodeType":"120","endLine":21,"endColumn":68},{"ruleId":"111","severity":1,"message":"121","line":3,"column":10,"nodeType":"113","messageId":"114","endLine":3,"endColumn":16},{"ruleId":"111","severity":1,"message":"116","line":2,"column":49,"nodeType":"113","messageId":"114","endLine":2,"endColumn":56},{"ruleId":"111","severity":1,"message":"122","line":18,"column":19,"nodeType":"113","messageId":"114","endLine":18,"endColumn":23},{"ruleId":"123","severity":1,"message":"124","line":25,"column":24,"nodeType":"125","messageId":"126","endLine":25,"endColumn":26},{"ruleId":"127","severity":1,"message":"128","line":74,"column":41,"nodeType":"120","endLine":76,"endColumn":42},{"ruleId":"111","severity":1,"message":"116","line":2,"column":49,"nodeType":"113","messageId":"114","endLine":2,"endColumn":56},{"ruleId":"111","severity":1,"message":"122","line":18,"column":19,"nodeType":"113","messageId":"114","endLine":18,"endColumn":23},{"ruleId":"123","severity":1,"message":"124","line":25,"column":28,"nodeType":"125","messageId":"126","endLine":25,"endColumn":30},{"ruleId":"123","severity":1,"message":"124","line":27,"column":30,"nodeType":"125","messageId":"126","endLine":27,"endColumn":32},{"ruleId":"127","severity":1,"message":"128","line":63,"column":41,"nodeType":"120","endLine":63,"endColumn":138},{"ruleId":"111","severity":1,"message":"112","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},{"ruleId":"111","severity":1,"message":"129","line":2,"column":18,"nodeType":"113","messageId":"114","endLine":2,"endColumn":27},{"ruleId":"123","severity":1,"message":"124","line":19,"column":24,"nodeType":"125","messageId":"126","endLine":19,"endColumn":26},{"ruleId":"118","severity":1,"message":"119","line":28,"column":29,"nodeType":"120","endLine":28,"endColumn":52},{"ruleId":"127","severity":1,"message":"130","line":70,"column":41,"nodeType":"120","endLine":70,"endColumn":77},{"ruleId":"111","severity":1,"message":"131","line":1,"column":27,"nodeType":"113","messageId":"114","endLine":1,"endColumn":36},{"ruleId":"111","severity":1,"message":"132","line":1,"column":38,"nodeType":"113","messageId":"114","endLine":1,"endColumn":46},{"ruleId":"111","severity":1,"message":"133","line":2,"column":18,"nodeType":"113","messageId":"114","endLine":2,"endColumn":24},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'Notification' is defined but never used.","'Section' is defined but never used.","'HomeScreen' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Column' is defined but never used.","'user' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Container' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useEffect' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]