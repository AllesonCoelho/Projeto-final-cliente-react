[{"/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/index.js":"1","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/App.js":"2","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/reportWebVitals.js":"3","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/components/header/index.js":"4","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/screens/home/index.js":"5","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/routes.js":"6","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/screens/auth/register/index.js":"7","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/screens/auth/login/index.js":"8","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/screens/notes/index/index.js":"9","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/screens/users/edit/index.js":"10","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/components/auth/register_form/index.js":"11","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/services/users.js":"12","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/services/api.js":"13","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/components/auth/login_form/index.js":"14","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/components/auth/private_route/index.js":"15","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/components/header_logged/index.js":"16"},{"size":500,"mtime":1608336881751,"results":"17","hashOfConfig":"18"},{"size":254,"mtime":1608414575543,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1608336881751,"results":"20","hashOfConfig":"18"},{"size":1634,"mtime":1608424772001,"results":"21","hashOfConfig":"18"},{"size":1660,"mtime":1608417505560,"results":"22","hashOfConfig":"18"},{"size":876,"mtime":1611785407287,"results":"23","hashOfConfig":"18"},{"size":1704,"mtime":1608428444331,"results":"24","hashOfConfig":"18"},{"size":1686,"mtime":1611780616376,"results":"25","hashOfConfig":"18"},{"size":289,"mtime":1611866403190,"results":"26","hashOfConfig":"18"},{"size":158,"mtime":1608416769021,"results":"27","hashOfConfig":"18"},{"size":3695,"mtime":1608432059521,"results":"28","hashOfConfig":"18"},{"size":493,"mtime":1611864424088,"results":"29","hashOfConfig":"18"},{"size":109,"mtime":1608430852327,"results":"30","hashOfConfig":"18"},{"size":3177,"mtime":1611781832616,"results":"31","hashOfConfig":"18"},{"size":349,"mtime":1611785763387,"results":"32","hashOfConfig":"18"},{"size":2844,"mtime":1611865907970,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"16fmyri",{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/index.js",[],["74","75"],"/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/App.js",["76","77","78","79"],"import React, { Fragment } from 'react';\nimport \"./App.scss\";\nimport { Notification, Section } from 'rbx';\nimport HomeScreen from './screens/home'\nimport Routes from './routes'\n\nconst App = () => (\n  <div>\n    <Routes />\n  </div>\n)\n\n\n\nexport default App;","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/reportWebVitals.js",[],"/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/components/header/index.js",["80"],"import React from 'react'\nimport { Navbar, Container, Column } from 'rbx'\nimport logoImage from '../../assets/images/logo.png'\nimport '../../styles/header.scss'\nimport { Link } from 'react-router-dom'\n\nfunction Header() {\n    return (\n        <Navbar>\n            <Container>\n                <Navbar.Brand>\n                    <Link to=\"/\">\n                        <img src={logoImage} />\n                    </Link>\n                    <Navbar.Burger\n                        className=\"navbar-burger burger\"\n                        aria-label=\"menu\"\n                        aria-expanded=\"false\"\n                        data-target=\"navbar-menu\">\n                        <span aria-hidden=\"true\"></span>\n                        <span aria-hidden=\"true\"></span>\n                        <span aria-hidden=\"true\"></span>\n                    </Navbar.Burger>\n                </Navbar.Brand>\n\n                <Navbar.Menu id=\"navbar-menu\">\n                    <Navbar.Segment as=\"div\" className=\"navbar-item navbar-end\" align=\"right\">\n                        <Column.Group>\n                            <Column>\n                                <Link to=\"/register\" className=\"button is-white has-text-custom-purple\">Register</Link>\n                            </Column>\n                            <Column>\n                                <Link to=\"/login\" className=\"button is-outlined is-custom-purple\">Login</Link>\n                            </Column>\n                        </Column.Group>\n                    </Navbar.Segment>\n                </Navbar.Menu>\n            </Container>\n        </Navbar>\n\n    )\n}\n\nexport default Header","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/screens/home/index.js",["81"],"import React, { Fragment } from 'react'\nimport PresentationImage from '../../assets/images/presentation.png';\nimport Header from '../../components/header'\nimport { Column, Section, Title, Container } from \"rbx\";\nimport '../../styles/home.scss'\nimport {Link} from 'react-router-dom'\n\nfunction HomeScreen() {\n    return (\n        <Fragment>\n\n            <Header />\n\n            <Section size=\"medium\" className=\"home\">\n                <Container>\n                    <Column.Group>\n                        <Column size={5}>\n                            <Title size={2} spaced className=\"has-text-white\">\n                                Create notes easily and access when you wants on the cloud\n                            </Title>\n                            <Title size={5} spaced className=\"has-text-light\" subtitle>\n                                Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs.<br /><br />\n                                Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print.\n                            </Title>\n                            <Link to='/register' className=\"button is-outlined is-white is-large\">\n                                <strong>Register for free Now</strong>\n                            </Link>\n                        </Column>\n                        <Column size={6} offset={1}>\n                        <img src={PresentationImage} />\n                        </Column>\n                    </Column.Group>\n                </Container>\n            </Section>\n\n        </Fragment>\n\n    )\n}\n\nexport default HomeScreen ","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/routes.js",[],"/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/screens/auth/register/index.js",["82"],"import React, { Fragment } from 'react';\nimport Header from '../../../components/header'\nimport { Column, Section, Title, Container, Card } from \"rbx\";\nimport LogoImage from '../../../assets/images/logo.png';\nimport \"../../../styles/auth.scss\";\nimport RegisterForm from \"../../../components/auth/register_form\"\n\nconst RegisterScreen = () => (\n    <Fragment>\n        <Header />\n        <Section size=\"medium\" className=\"auth\">\n            <Container>\n                <Column.Group centered>\n                    <Column size={3}>\n                        <Card>\n                            <Card.Content>\n                                <Section>\n                                    <Column.Group centered>\n                                        <Column size={12}>\n                                            <img src={LogoImage} />\n                                        </Column>\n                                    </Column.Group>\n\n                                    <Column.Group>\n                                        <Column size={12}>\n                                            <Title size={6} className=\"has-text-grey has-text-centered\">\n                                                Your notes on the cloud\n                                            </Title>\n                                        </Column>\n                                    </Column.Group>\n                                    <RegisterForm/>\n                                </Section>\n\n                            </Card.Content>\n                        </Card>\n                    </Column>\n                </Column.Group>\n            </Container>\n        </Section>\n    </Fragment>\n);\n\nexport default RegisterScreen;","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/screens/auth/login/index.js",["83"],"import React, { Fragment } from 'react'\nimport Header from \"../../../components/header\"\nimport { Column, Section, Title, Container, Card } from \"rbx\"\nimport LogoImage from '../../../assets/images/logo.png'\nimport \"../../../styles/auth.scss\"\nimport LoginForm from '../../../components/auth/login_form'\n\n\nconst LoginScreen = () => (\n    <Fragment>\n        <Header />\n        <Section size=\"medium\" className=\"auth\">\n            <Container>\n                <Column.Group centered>\n                    <Column size={3}>\n                        <Card>\n                            <Card.Content>\n                                <Section>\n                                    <Column.Group centered>\n                                        <Column size={12}>\n                                            <img src={LogoImage} />\n                                        </Column>\n                                    </Column.Group>\n\n                                    <Column.Group>\n                                        <Column size={12}>\n                                            <Title size={6} className=\"has-text-grey has-text-centered\">\n                                                Your notes on the cloud\n                                            </Title>\n                                        </Column>\n                                    </Column.Group>\n                                    <LoginForm/>\n                                </Section>\n\n\n                            </Card.Content>\n                        </Card>\n                    </Column>\n                </Column.Group>\n            </Container>\n        </Section>\n    </Fragment>\n)\n\nexport default LoginScreen;","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/screens/notes/index/index.js",[],"/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/screens/users/edit/index.js",[],"/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/components/auth/register_form/index.js",["84","85","86","87"],"import React, { Fragment, useState } from 'react';\nimport { Button, Field, Control, Input, Column, Section, Help, Label } from \"rbx\";\nimport { Redirect } from \"react-router-dom\";\nimport UserService from '../../../services/users'\n\n\nfunction RegisterForm() {\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [redirectToLogin, setRedirectToLogin] = useState(false);\n    const [error, setError] = useState(false);\n\n    const handleSubmit = async (evt) => {\n        evt.preventDefault();\n\n        try {\n            const user = await UserService.register({ name: name, email: email, password: password });\n            setRedirectToLogin(true);\n        } catch (error) {\n            setError(true)\n        }\n    }\n\n    if(redirectToLogin == true)\n    return <Redirect to={{pathname: \"/login\"}}/>\n\n\n    return (\n        <Fragment>\n            <Column.Group centered>\n                <form onSubmit={handleSubmit} >\n                    <Column size={12}>\n                        <Field>\n                            <Label size=\"small\">Name:</Label>\n                            <Control>\n                                <Input\n                                    type=\"name\"\n                                    required\n                                    name=\"name\"\n                                    value={name}\n                                    onChange={e => setName(e.target.value)}\n                                />\n                            </Control>\n                        </Field>\n                        <Field>\n                            <Label size=\"small\">Email:</Label>\n                            <Control>\n                                <Input\n                                    type=\"email\"\n                                    required\n                                    name=\"email\"\n                                    value={email}\n                                    onChange={e => setEmail(e.target.value)}\n                                />\n                            </Control>\n                        </Field>\n                        <Field>\n                            <Label size=\"small\">Password:</Label>\n                            <Control>\n                                <Input\n                                    type=\"password\"\n                                    required\n                                    name=\"password\"\n                                    value={password}\n                                    onChange={e => setPassword(e.target.value)}\n                                />\n                            </Control>\n                        </Field>\n                        <Field>\n                            <Control>\n                                <Column.Group breakpoint=\"mobile\">\n                                    <Column>\n                                        <a className=\"button is-white has-text-custom-purple\"\n                                        onClick={e => setRedirectToLogin(true)}\n                                        >Login or</a>\n                                    </Column>\n                                    <Column>\n                                        <Button color=\"custom-purple\" outlined>Register</Button>\n                                    </Column>\n                                </Column.Group>\n                            </Control>\n                        </Field>\n                        { error && <Help color=\"danger\">Email or Password invalid</Help> }\n                    </Column>\n                </form>\n            </Column.Group>\n        </Fragment>\n    )\n}\n\nexport default RegisterForm;","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/services/users.js",[],"/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/services/api.js",[],"/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/components/auth/login_form/index.js",["88","89","90","91","92"],"import React, { Fragment, useState } from 'react'\nimport { Button, Field, Control, Input, Column, Section, Help, Label } from \"rbx\"\nimport { Redirect } from \"react-router-dom\"\nimport UserService from '../../../services/users'\n\nfunction LoginForm() {\n\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [RedirectToRegister, setRedirectToRegister] = useState(false)\n    const [RedirectToNotes, setRedirectToNotes] = useState(false)\n    const [Error, setError] = useState(false)\n\n    const handleSubmit = async (evt) => {\n        evt.preventDefault();\n\n        try {\n            const user = await UserService.login({email: email, password: password });\n            setRedirectToNotes(true);\n        } catch (error) {\n            setError(true)\n        }\n    }\n\n    if (RedirectToRegister == true)\n        return <Redirect to={{ pathname: \"/register\" }} />\n    else if (RedirectToNotes == true)\n        return <Redirect to={{ pathname: \"/notes\" }} />\n\n    return (\n        <Fragment>\n            <Column.Group centered>\n                <form onSubmit={handleSubmit}>\n                    <Column size={12}>\n                        <Field>\n                            <Label size=\"small\">Email:</Label>\n                            <Control>\n                                <Input\n                                    type=\"email\"\n                                    value={email}\n                                    onChange={e => setEmail(e.target.value)}\n                                    required\n                                    name=\"email\"\n                                />\n                            </Control>\n                        </Field>\n                        <Field>\n                            <Label size=\"small\">Password:</Label>\n                            <Control>\n                                <Input\n                                    type=\"password\"\n                                    value={password}\n                                    onChange={e => setPassword(e.target.value)}\n                                    required\n                                    name=\"password\"\n                                />\n                            </Control>\n                        </Field>\n                        <Field>\n                            <Control>\n                                <Column.Group breakpoint=\"mobile\">\n                                    <Column>\n                                        <a onClick={e => setRedirectToRegister(true)} className=\"button is-white has-text-custom-purple\">Register or</a>\n                                    </Column>\n                                    <Column>\n                                        <Button color=\"custom-purple\" outlined>Login</Button>\n                                    </Column>\n                                </Column.Group>\n                            </Control>\n                        </Field>\n                        {Error && <Help color=\"danger\">Email or Password invalid</Help>}\n                    </Column>\n                </form>\n            </Column.Group>\n        </Fragment>\n    )\n}\n\nexport default LoginForm","/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/components/auth/private_route/index.js",[],"/home/mith/Downloads/Curso-Full-Stack-8Semanas/Modulo24/Projeto-final-cliente-react/Projeto-final-cliente-react/javascript_note/src/components/header_logged/index.js",["93","94","95","96","97","98","99"],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":25},{"ruleId":"104","severity":1,"message":"108","line":3,"column":10,"nodeType":"106","messageId":"107","endLine":3,"endColumn":22},{"ruleId":"104","severity":1,"message":"109","line":3,"column":24,"nodeType":"106","messageId":"107","endLine":3,"endColumn":31},{"ruleId":"104","severity":1,"message":"110","line":4,"column":8,"nodeType":"106","messageId":"107","endLine":4,"endColumn":18},{"ruleId":"111","severity":1,"message":"112","line":13,"column":25,"nodeType":"113","endLine":13,"endColumn":48},{"ruleId":"111","severity":1,"message":"112","line":30,"column":25,"nodeType":"113","endLine":30,"endColumn":56},{"ruleId":"111","severity":1,"message":"112","line":20,"column":45,"nodeType":"113","endLine":20,"endColumn":68},{"ruleId":"111","severity":1,"message":"112","line":21,"column":45,"nodeType":"113","endLine":21,"endColumn":68},{"ruleId":"104","severity":1,"message":"109","line":2,"column":49,"nodeType":"106","messageId":"107","endLine":2,"endColumn":56},{"ruleId":"104","severity":1,"message":"114","line":18,"column":19,"nodeType":"106","messageId":"107","endLine":18,"endColumn":23},{"ruleId":"115","severity":1,"message":"116","line":25,"column":24,"nodeType":"117","messageId":"118","endLine":25,"endColumn":26},{"ruleId":"119","severity":1,"message":"120","line":74,"column":41,"nodeType":"113","endLine":76,"endColumn":42},{"ruleId":"104","severity":1,"message":"109","line":2,"column":49,"nodeType":"106","messageId":"107","endLine":2,"endColumn":56},{"ruleId":"104","severity":1,"message":"114","line":18,"column":19,"nodeType":"106","messageId":"107","endLine":18,"endColumn":23},{"ruleId":"115","severity":1,"message":"116","line":25,"column":28,"nodeType":"117","messageId":"118","endLine":25,"endColumn":30},{"ruleId":"115","severity":1,"message":"116","line":27,"column":30,"nodeType":"117","messageId":"118","endLine":27,"endColumn":32},{"ruleId":"119","severity":1,"message":"120","line":63,"column":41,"nodeType":"113","endLine":63,"endColumn":138},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":25},{"ruleId":"104","severity":1,"message":"121","line":2,"column":18,"nodeType":"106","messageId":"107","endLine":2,"endColumn":27},{"ruleId":"104","severity":1,"message":"122","line":7,"column":10,"nodeType":"106","messageId":"107","endLine":7,"endColumn":25},{"ruleId":"104","severity":1,"message":"123","line":8,"column":10,"nodeType":"106","messageId":"107","endLine":8,"endColumn":16},{"ruleId":"115","severity":1,"message":"116","line":19,"column":24,"nodeType":"117","messageId":"118","endLine":19,"endColumn":26},{"ruleId":"111","severity":1,"message":"112","line":28,"column":29,"nodeType":"113","endLine":28,"endColumn":52},{"ruleId":"119","severity":1,"message":"124","line":59,"column":41,"nodeType":"113","endLine":59,"endColumn":77},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'Notification' is defined but never used.","'Section' is defined but never used.","'HomeScreen' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'user' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Container' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faList' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]